environment: prod

loadGenerator: 
  enable: false
  name: load-generator
  image: busybox
  version: 1.28
  components: load
  replicas: 20

metrics:
  enabled: false

namespace: default

host:
  auth: auth.test
  app: grogu.test
  prometheus: prom.test
  grafana: grafana.test

gateway:
  name: krakend-gateway
  image: devopsfaith/krakend
  version: 2.7 
  components: gateway
  servicePort: 8787
  containerPort: 8080
  metricsTargetPort: 9090
  replicas: 2
  limits:
    memory: "512Mi"
    cpu: "400m"

front:
  name: react-front
  image: mmko67/grogu-front
  version: 0.3.6
  components: front
  servicePort: 9071
  containerPort: 8080
  replicas: 1
  limits:
    memory: "128Mi"
    cpu: "100m"

nodejsBack:
  name: nodejs-back
  image: mmko67/grogu-api
  version: 0.1.6
  components: back
  servicePort: 9070
  containerPort: 8080
  replicas: 1
  limits:
    memory: "500Mi"
    cpu: "200m"


golangBack:
  name: golang-back
  image: mmko67/golang-back
  version: 0.0.6
  components: back
  servicePort: 8800
  containerPort: 8081
  replicas: 1
  limits:
    memory: "500Mi"
    cpu: "200m"

auth:
  name: keycloak-auth
  image: quay.io/keycloak/keycloak
  version: 25.0.6
  components: auth
  servicePort: 8080
  containerPort: 8080
  jwkUrl: http://keycloak-auth-clusterip:8080/realms/demorealm/protocol/openid-connect/certs
  alg: RS256
  replicas: 1
  realm:
    file:
      name: realm-export
  limits:
    memory: "800Mi"
    cpu: "400m"

postgres:
  name: postgres
  image: postgres
  version: 14.0
  components: postgres
  servicePort: 5432
  containerPort: 5432
  # limits:
  #   memory: "500Mi"
  #   cpu: "300m"
  migration:
    name: postgres-migration
    version: 1
    components: migration

redis:
  name: redis-cache
  image: redis
  version: 4.0.11-alpine
  components: cache
  containerPort: 6379
  servicePort: 6379
